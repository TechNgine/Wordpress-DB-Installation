- name: Install and Secure MySQL
  hosts: web_servers
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
    mysql_new_user: "teama_admin"
    mysql_new_password: "teama_password"
  tasks:
    - name: Copying script over
      copy:
        src: useradd2.sh
        dest: /tmp/useradd2.sh
        mode: '0755'

    - name: Executing Script to add users
      command: /tmp/useradd2.sh
      args:
        chdir: /tmp

    - name: Update package cache (Debian-based)
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install MySQL and required Python modules (Debian-based)
      apt:
        name:
          - mysql-server
          - python3-pymysql
        state: present
      when: ansible_os_family == "Debian"

    - name: Install MySQL and required Python modules (RedHat-based)
      yum:
        name:
          - mysql-server
          - python3-PyMySQL
        state: present
      when: ansible_os_family == "RedHat"

    - name: Start and enable MySQL service
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Ensure MySQL is running before continuing
      wait_for:
        path: /var/run/mysqld/mysqld.sock
        timeout: 30
      when: ansible_os_family == "Debian"

    # âœ… Fix for 'Access denied' error - Run as sudo without password
    - name: Create MySQL database for application
      command: >
        sudo mysql -e "CREATE DATABASE teama_db;"
      become: yes
      ignore_errors: yes

    - name: Create a new MySQL user with password authentication
      command: >
        sudo mysql -e "CREATE USER '{{ mysql_new_user }}'@'%' IDENTIFIED BY '{{ mysql_new_password }}';"
      become: yes
      ignore_errors: yes

    - name: Grant privileges to the new MySQL user
      command: >
        sudo mysql -e "GRANT ALL PRIVILEGES ON *.* TO '{{ mysql_new_user }}'@'%' WITH GRANT OPTION;"
      become: yes

    - name: Flush privileges to apply changes
      command: >
        sudo mysql -e "FLUSH PRIVILEGES;"
      become: yes

    - name: Remove MySQL test database
      command: >
        sudo mysql -e "DROP DATABASE IF EXISTS test;"
      become: yes
